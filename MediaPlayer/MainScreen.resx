<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAIRwAAAEAIAB4DwAAJgAAACAgAgABAAEAMAEAAJ4PAAAoAAAAIQAAADgAAAABACAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAURERS1EWF9paISPfahYW33AYGN9wGBjfcBgY33AYGN9wGBjfcBgY33AY
        GN9wGBjfcBgY33AYGN9wGBjfcSMe31xcI99daSrfTGoa31xAFt9wGBjfcBgY33AYGN9wRCvfMqsc3z5q
        Dd9qIRbfcBgY33AYGN9wGBjfcBgY328YGNduFhZDUg8PUFIVFvpbIiX/axcX/3AZGf9wGRn/cBkZ/3AZ
        Gf9wGRn/cBkZ/3AZGf9wGRn/cBkZ/3AZGf9uMiL/V20l/zu7LP811jH/JNQg/x+7Ef85dQz/YTEV/3Ed
        HP93RjP/I9Ee/wzTCf8llgj/XUUa/3AZGf9wGRn/cBkZ/28YGPZvFRVHVhkWUFIVFvpbIiX/axcX/3AZ
        Gf9wGRn/cBkZ/3AZGf9wGRn/cBkZ/3AZGf9wGRn/cBkZ/3AaGf90TDL/LtIp/zHeMP843zj/KN0o/xTb
        FP8F2AX/HaoJ/1yCMv9Nmy//LNMo/yHcIf8B1wH/Q34Z/3AZGf9wGRn/cBkZ/28YGPZvFRVHObgsUDR8
        GfpWSiv/aBwX/3AZGf9wGRn/cBkZ/3AZGf9wGRn/cBkZ/3AZGf9wGRn/cBkZ/2tJKf9ZizT/MNct/zLe
        Mv853zn/K90r/yPcI/8Y2xj/B9YG/1PDRf8r3Cr/LN0s/y3eLf8D2AP/FrkJ/0lmFf9vGRj/cBkZ/28Y
        GPZvFRVHI8wjUBnWGfo0zC//Lo8N/1JKEv9vGRj/cBkZ/3AZGf9wGRn/cBkZ/3AZGf9wGRn/cBkZ/2p9
        Pf8x1C3/LNws/zHdMf843Tj/Md0x/yrdKv8k3ST/FNoU/z/YPP8w3TD/Mt0y/zXfNf8Y2xj/AtcC/y+r
        Gv9xIh7/cBkZ/28YGPZvFRVHAL8AUCHPIfo42Dj/B9gH/wvEAv80gQ3/bCcb/3AZGf9wGRn/cSoh/2Mu
        Fv9wGhr/ZEci/2iQRP8z3TP/MNww/zPcM/833Df/Od45/zDdMP8r3Sv/MN4w/zXdNf8r2iv/LNss/zTe
        NP8u3i7/A9gD/xe+DP9OVRL/cBkZ/28YGPZvFRVHAL8AUBXEFfoszyz/C9kL/wDYAP8P0Av/ZUoj/3AZ
        Gf9wLCH/bWg4/zerIf9VcSX/RK8v/0DTPP8v2y//K9sr/zPbM/8z2jP/Ndw1/zLcMv8v3S//ON84/zHb
        Mf8p2Sn/Ltou/zPcM/803jT/G9sb/w3ZDf8bvQ//aTwh/3QuJfZdRxxHAL8AUAC+APoXyBf/DdgN/wDY
        AP8K0wf/X1Mi/3IdHf9dhTX/RLUz/y7dLv8w2y//N9w3/z/cP/8v2i//KNgo/zHaMf8x2DH/Nts2/zPb
        M/8z3DP/Pd49/zLaMv8u2S7/M9oz/zfbN/873Tv/NN80/xrbGv8I0AX/Q24T/3RqQPZH20dHAL8AUAC+
        APoRxhH/DtgO/wDXAP8G1gX/Wl0h/3IgHv9Xq0D/Ltou/y7bLv8v3C//O9w7/zraOv812TX/Ldkt/zDZ
        MP8w1zD/O9s7/zjbOP802zT/ONw4/zDYMP8r1yv/LNcs/zXaNf893D3/Ndw1/xvaG/8A2AD/BtID/1W6
        RfZS11JHAL8AUAC+APoOxA7/Ldst/xXaFf8E1wP/VWki/3EnIP9LtDr/L9gv/zDZMP8x2jH/O9k7/zfX
        N/822Db/Kdcp/zLYMv8u1i7/Ndg1/znaOf802jT/M9kz/zDXMP8q1ir/L9cv/zbZNv852Tn/Ndo1/xrY
        Gv8A2AD/AdgB/zbRM/YgxSBHAL8AUAC+APoNww3/Pdk9/x3aHf8O2Q7/RZUm/2JMIv9AuzT/MdYx/y/X
        L/8z1zP/NdY1/zPVM/841zj/J9Un/zXYNf8v1S//MdYx/zDXMP8z2DP/Ntg2/zbXNv8y1jL/Ntc2/zrY
        Ov801zT/NNg0/yLYIv8Q2hD/BdgF/yPSI/YAvgBHAL8AUAC+APoMwgz/PNI8/yvZK/8z3TP/LNUs/zq3
        K/8szSr/NdQ1/zTVNP831jf/L9Iv/yzRLP821Tb/LNYs/zTWNP8v1C//N9Y3/zDWMP8y1jL/MdUx/zDU
        MP8v1C//MtUy/zbWNv8v1C//N9Y3/zXYNf8q2yr/JNwk/x7QHvYAvgBHAL8AUAC+APoLwQv/Lcks/yvV
        K/812DX/F8oX/yvPK/8rziv/NtI2/zfUN/840zj/LdAt/y3QLf831Df/LNUs/zPVM/8u0y7/NNQ0/zPV
        M/8z1TP/NdQ1/zTTNP8z0zP/M9Qz/zPUM/8p0Sn/M9Mz/z3UPf8s1yz/Otw6/x7PHvYAvgBHAL8AUAC+
        APoAvwD/M54f/1StQP871Dv/GcgZ/xbFFv8lyiX/L84v/zfRN/820Db/LM0s/yvOK/810jX/KdMp/znV
        Of8v0i//L9Iv/y7TLv8x0zH/MdIx/zfTN/8/1D//N9Q3/zTTNP8t0S3/L9Av/yzLLP8r0iv/NdY1/yPO
        I/YAvgBHAL8AUAC+APoCvgH/QYch/2GMP/8vzC//FsQW/wC/AP8bxhv/Kssq/zrPOv83zTf/LMws/y3N
        Lf8z0DP/M9Qz/z3VPf8w0TD/M9Iz/zDSMP8z0jP/L9Av/zHQMf870jv/MdEx/y3QLf8ozij/Ks4q/w3C
        Df8xzjH/O9M7/ynNKfYAvgBHAL8AUAK+AvonmRT/VFge/19aJv8Ypgr/AL8A/wC/AP8UxBT/Isch/yvK
        K/8hxyH/Kckp/zDMMP830Df/OtQ6/zvTO/8t0C3/M9Ez/zXRNf8y0DL/NNA0/zXQNf890T3/NNA0/y3P
        Lf8uzi7/L80v/wC/AP8bxhv/MMww/ynLKfYAvgBHAL8AUAS/BPpRYyP/ax4a/3AZGf9ZOhP/MHYK/xOu
        Cv8olxL/LJMT/ySfEv8EwAT/F8UX/ybJJv81zjX/NtI2/znSOf8rziv/Ks4q/zTQNP8yzzL/L84v/zPO
        M/870Dv/OtA6/y/OL/8qzCr/LMss/wC/AP8AvwD/I8Ui/yXHJfYAvgBHAL8AUAa9BfpTWSH/axcX/3AZ
        Gf9wGRn/bxoY/1w9GP9uJR3/cCId/18yFf82bgz/IpkN/zCkH/8+xzr/OtI6/zvRO/8xzjH/Mc4x/zrQ
        Ov80zjT/Mc0x/y7MLv8vzC//Oc85/y7NLv8pyyn/J8kn/wC/AP8AvwD/J6oZ/z96GPYVngNHI28GUB+K
        DfpUVCb/axcX/3AZGf9wGRn/cBkZ/3AZGf9wGRn/cBkZ/3AZGf9vGRj/bCgd/2s+Jf9EqTP/QNJA/zjQ
        OP8wzTD/Ns42/0LQQv8vzC//Lcst/y7LLv8syiz/OM04/y/ML/8dxx3/CsEK/wC/AP8AvwD/LZwY/3Ai
        HfZrGRVHUg8PUEwhFfpcKSf/axcX/3AZGf9wGRn/cBkZ/3AZGf9wGRn/cBkZ/3AZGf9wGRn/cBkZ/3Mj
        IP9AiiH/OM84/zLNMv8syyz/L8wv/z3OPf8tyi3/J8kn/yfIJ/8jxyP/M8sz/y/LL/8bxhv/AL8A/wC/
        AP8Wrwz/OYca/3AfG/ZvFRVHUg8PUFIVFvpbIiX/axcX/3AZGf9wGRn/cBkZ/3AZGf9wGRn/cBkZ/3AZ
        Gf9wGRn/cBkZ/3AZGf9gMRb/VZk6/y/ML/8uyy7/Lcot/y/KL/8bxhv/G8Ub/xTEFP8Mwgz/Icch/yfI
        J/8XxRf/AL8A/wC/AP9IeCD/ZjEb/28YGPZvFRVHUg8PUFIVFvpbIiX/axcX/3AZGf9wGRn/cBkZ/3AZ
        Gf9wGRn/cBkZ/3AZGf9wGRn/cBkZ/3AZGf9wGRn/ZIE9/y7LLv8ryiv/J8gn/xLDEv8DwAP/AL8A/wC/
        AP8AvwD/DL0K/ye3H/8VuA//AL8A/wG/Af9McSH/cBkZ/28YGPZvFRVHUg8PUFIVFvpbIiX/axcX/3AZ
        Gf9wGRn/cBkZ/3AZGf9wGRn/cBkZ/3AZGf9wGRn/cBkZ/3AZGf9wGRn/W3ky/yjJKP8hxyH/GsUa/wC/
        AP8AvwD/DrYJ/yOcD/88fhj/OXgT/1lTH/9OSxH/J4UJ/wq1BP9PayH/cBkZ/28YGPZvFRVHUg8PUFIV
        FvpbIiX/axcX/3AZGf9wGRn/cBkZ/3AZGf9wGRn/cBkZ/3AZGf9wGRn/cBkZ/3AZGf9wGRn/W04e/zei
        I/8QwxD/BMAE/wC/AP8AvwD/NJAZ/2E7G/9wHBr/cBkZ/3AeG/9wGRn/ax8Y/1JLFf9jPx//cBkZ/28Y
        GPZvFRVHUg8PUFIVFvpbIiX/axcX/3AZGf9wGRn/cBkZ/3AZGf9wGRn/cBkZ/3AZGf9wGRn/cBkZ/3AZ
        Gf9wGRn/cBkZ/15RI/8YrQ7/AL8A/wK/Av8gog//QXob/3EcG/9wGRn/cBkZ/3AZGf9wGRn/cBkZ/3AZ
        Gf9wGRn/cBkZ/28YGPZvFRVHUg8PUFIVFvpbIiX/axcX/3AZGf9wGRn/cBkZ/3AZGf9wGRn/cBkZ/3AZ
        Gf9wGRn/cBkZ/3AZGf9wGRn/cBkZ/3AZGf9QRxH/J4MI/wi4BP9WYiP/aSwb/3AZGf9wGRn/cBkZ/3AZ
        Gf9wGRn/cBkZ/3AZGf9wGRn/cBkZ/28YGPZvFRVHUg8PUFIVFvpbIiX/axcX/3AZGf9wGRn/cBkZ/3AZ
        Gf9wGRn/cBkZ/3AZGf9wGRn/cBkZ/3AZGf9wGRn/cBkZ/3AZGf9wGRn/ax8Y/01TFf9lQCH/cBkZ/3AZ
        Gf9wGRn/cBkZ/3AZGf9wGRn/cBkZ/3AZGf9wGRn/cBkZ/28YGPZvFRVHURERS1EWF9paISPfahYW33AY
        GN9wGBjfcBgY33AYGN9wGBjfcBgY33AYGN9wGBjfcBgY33AYGN9wGBjfcBgY33AYGN9wGBjfcBgY33AY
        GN9wGRnfcBgY33AYGN9wGBjfcBgY33AYGN9wGBjfcBgY33AYGN9wGBjfcBgY328YGNduFhZDgAAAAIAA
        AACAAAAAgAAAAIAAAACAAAAAgAAAAIAAAACAAAAAgAAAAIAAAACAAAAAgAAAAIAAAACAAAAAgAAAAIAA
        AACAAAAAgAAAAIAAAACAAAAAgAAAAIAAAACAAAAAgAAAAIAAAACAAAAAgAAAAIAAAACAAAAAgAAAAIAA
        AACAAAAAgAAAAIAAAACAAAAAgAAAAIAAAACAAAAAgAAAAIAAAACAAAAAgAAAAIAAAACAAAAAgAAAAIAA
        AACAAAAAgAAAAIAAAACAAAAAgAAAAIAAAACAAAAAgAAAAIAAAAAoAAAAIAAAAEAAAAABAAEAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA////AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
</value>
  </data>
</root>